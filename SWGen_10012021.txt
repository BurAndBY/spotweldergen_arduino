#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);  // Устанавливаем I2C адрес дисплея.
int Avalue = 0; //Переменная для хранения значения с потенциометра.
int Tpulse = 0; //Переменная для перевода значения с потенциометра в длину импульса.
int Tpause = 1500; //Пауза между импульсами 1,5 секунды.
int mode = 1; //1 - auto; 0 - manual
unsigned long timeSet = 2000; //Добавлена задержка в 2с соответствующая времени заставки.

void setup()
{
  pinMode(13, OUTPUT); //Выход генератора импульсов, выбран выход 13 потому-что там есть встроенный светодиод для контроля.
  digitalWrite (13, LOW); //После включения микроконтроллера устанавливаем низкий уровень на выходе генератора.
  pinMode(12, INPUT_PULLUP); //Чтобы не использовать доп. резистор  используем pullup.
  lcd.init();                     
  lcd.backlight();  // Включаем подсветку дисплея.
  lcd.print("EasyDIY&BurAndBY"); //Подписывайтесь на YouTube каналы EasyDIY(http://bit.ly/easydiych) и BurAndBY(https://bit.ly/burandbych).
  lcd.setCursor(0, 1); // Устанавливаем курсор на первый символ второй строки.
  lcd.print("Spot Welder Gen");
  delay(2000);
  lcd.setCursor(0, 1);
  lcd.print("Auto  :   miliS "); //Выводим на экран режим по умолчанию(Auto).
}

void loop()
{
  lcd.setCursor(0, 1); // Устанавливаем курсор на первый символ второй строки.  
  if (digitalRead(12) == 0 && mode == 1){ //Если кнопка нажата и режим ещё не был изменен, то меняем режим и выводим Manual .
    mode = 0; //После нажатия кнопки режим будет Manual до перезагрузки микроконтроллера.
    lcd.print("Manual");
  }
  Avalue = analogRead(A6); //Считываем положение ручки потенциометра через аналоговый вход.
  Tpulse = Avalue/40; //Avalue может принимать значение от 0 до 1024; делитель устанавливает макс. длительность импульса.
  lcd.setCursor(7, 1); // Устанавливаем курсор на восьмой символ второй строки.
  lcd.print("   ");    //Очищаем предыдущее значение Tpulse на дисплее.
  lcd.setCursor(7, 1); // Устанавливаем курсор на восьмой символ второй строки.
  lcd.print(Tpulse); //Выводим длину импульса на дисплей.
  delay(50); //Костыль, чтобы меньше моргало :)
  if (mode == 1||mode == 0 && digitalRead(12) == 0) { //Если режим Auto или (режим Manual и кнопка нажата) формируется импульс и пауза.
    if (millis() - timeSet > Tpause){  //Таймер на millis() для формирования паузы между импульсами.
      timeSet = millis(); //Запоминаем текущее значение millis() в переменной timeSet.
      digitalWrite(13, HIGH); //Включаем выход импульса.
      delay(Tpulse);   //delay() использован намеренно, чтобы в этот момент не происходил опрос потенциометра.    
      digitalWrite(13, LOW); //Выключаем выход импульса.
  }
  }
}